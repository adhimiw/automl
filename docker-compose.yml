version: '3.8'

services:
  frontend:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:8000
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-data_automation}
      - REDIS_URL=redis://redis:6379
      - AUTH_SECRET=${AUTH_SECRET:-development-secret-do-not-use-in-production}
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
      - UPLOAD_DIR=/app/uploads
    command: npm run dev
    depends_on:
      - backend
      - db
      - redis

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./uploads:/app/uploads
    environment:
      - PORT=8000
      - HOST=0.0.0.0
      - LOG_LEVEL=info
      - UPLOAD_DIR=/app/uploads
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
      - redis

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-data_automation}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data:
