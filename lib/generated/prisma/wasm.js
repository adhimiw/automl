
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  password_hash: 'password_hash',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  user_id: 'user_id',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ConceptExplanationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  summary: 'summary',
  related_concepts: 'related_concepts',
  prerequisites: 'prerequisites',
  difficulty: 'difficulty',
  visual_aids: 'visual_aids',
  category: 'category',
  tags: 'tags',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TutorialScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  summary: 'summary',
  learning_objectives: 'learning_objectives',
  prerequisites: 'prerequisites',
  estimated_time: 'estimated_time',
  difficulty: 'difficulty',
  category: 'category',
  tags: 'tags',
  completion_certificate: 'completion_certificate',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.TutorialStepScalarFieldEnum = {
  id: 'id',
  tutorial_id: 'tutorial_id',
  title: 'title',
  content: 'content',
  code: 'code',
  visual_aids: 'visual_aids',
  estimated_time: 'estimated_time',
  checkpoint: 'checkpoint',
  order: 'order',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.ExerciseScalarFieldEnum = {
  id: 'id',
  tutorial_id: 'tutorial_id',
  title: 'title',
  description: 'description',
  instructions: 'instructions',
  starter_code: 'starter_code',
  solution_code: 'solution_code',
  validation_tests: 'validation_tests',
  hints: 'hints',
  difficulty: 'difficulty',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.QuizQuestionScalarFieldEnum = {
  id: 'id',
  tutorial_id: 'tutorial_id',
  question: 'question',
  options: 'options',
  correct_answer: 'correct_answer',
  explanation: 'explanation',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LearningPathScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  difficulty: 'difficulty',
  estimated_time: 'estimated_time',
  prerequisites: 'prerequisites',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.LearningPathItemScalarFieldEnum = {
  id: 'id',
  learning_path_id: 'learning_path_id',
  item_type: 'item_type',
  item_id: 'item_id',
  order: 'order',
  required: 'required',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserProgressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  content_type: 'content_type',
  content_id: 'content_id',
  progress_percentage: 'progress_percentage',
  completed: 'completed',
  last_accessed: 'last_accessed',
  created_at: 'created_at',
  updated_at: 'updated_at',
  concept_id: 'concept_id',
  tutorial_id: 'tutorial_id'
};

exports.Prisma.LearningPathProgressScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  learning_path_id: 'learning_path_id',
  progress_percentage: 'progress_percentage',
  completed: 'completed',
  last_accessed: 'last_accessed',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserSolutionScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  exercise_id: 'exercise_id',
  code: 'code',
  is_correct: 'is_correct',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.UserQuizAnswerScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  quiz_question_id: 'quiz_question_id',
  selected_option: 'selected_option',
  is_correct: 'is_correct',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Project: 'Project',
  ConceptExplanation: 'ConceptExplanation',
  Tutorial: 'Tutorial',
  TutorialStep: 'TutorialStep',
  Exercise: 'Exercise',
  QuizQuestion: 'QuizQuestion',
  LearningPath: 'LearningPath',
  LearningPathItem: 'LearningPathItem',
  UserProgress: 'UserProgress',
  LearningPathProgress: 'LearningPathProgress',
  UserSolution: 'UserSolution',
  UserQuizAnswer: 'UserQuizAnswer'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
